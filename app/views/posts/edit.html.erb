<div class="text-center max-w-2xl mx-auto shadow-md mt-10 sm:px-4 pb-8">
  <h1 class="mb-4 text-center text-2xl font-bold text-gray-900 md:mb-8 py-2 lg:text-3xl">編集</h1>
    <div class="pb-4 text-red-700">
      <%= render 'shared/error_messages', object: @post %>
    </div>
  <div class="mx-auto max-w-md rounded-lg border flex flex-col gap-4 md:p-8">
    <%= render 'form_post', map_id: "edit-map-#{@post.id}", locals: { post: @post, map: @map } %>
  </div>
</div>

<script 
  type="text/javascript" 
  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_API'] %>&callback=initializeMap" 
  async
  defer
  >
</script>

<script>
  let map;
  let map_lat;
  let map_lng;
  let marker;

  function markerData(imageUrl) {
    // 隠しフィールドに画像URLを設定
    document.getElementById('post_map_marker_image').value = imageUrl;

    // マーカーのアイコンを更新
    if (marker) {
      marker.setIcon({
        url: imageUrl,
        scaledSize: new google.maps.Size(60, 60)
      });
    }
  }

  function initializeMap() {
    // もしユーザーの保存した座標があれば、それを使う
    const myLatLng = { 
      lat: <%= @post.map.latitude || 35.68090045006303 %>, 
      lng: <%= @post.map.longitude || 139.76690798417752 %> 
    };

    // 地図を初期化
    map = new google.maps.Map(document.getElementById('edit-map-<%= @post.id %>'), {
      center: myLatLng,
      zoom: 12
    });

    const initialImageUrl = document.getElementById('post_map_marker_image')?.value || null;

    // マーカーの初期化
    marker = new google.maps.Marker({
      position: myLatLng,
      map: map,
      icon: {
        url: initialImageUrl,
        scaledSize: new google.maps.Size(60, 60)
      }
    });

    map_lat = document.getElementById('post_map_latitude');
    map_lng = document.getElementById('post_map_longitude');

    document.addEventListener('change', function (event) {
      if (event.target.name === "post[marker_image]") {
        markerData(event.target.value); // マーカー画像を更新
      }
    });

    // 地図上でクリックした位置にマーカーを設定
    google.maps.event.addListener(map, 'click', function(event) {
      const lat = event.latLng.lat();
      const lng = event.latLng.lng();
      
      marker.setPosition(event.latLng);
      marker.setMap(map);
      map_lat.value = lat;  // 緯度を設定
      map_lng.value = lng;  // 経度を設定

      // 逆ジオコーディングで住所を取得
      geocodeLatLng(lat, lng);
    });

    // もし保存された位置があれば、マーカーをその位置に移動
    if (myLatLng.lat && myLatLng.lng) {
      marker.setPosition(new google.maps.LatLng(myLatLng.lat, myLatLng.lng));
      marker.setMap(map);
      map_lat.value = myLatLng.lat;
      map_lng.value = myLatLng.lng;


      geocodeLatLng(myLatLng.lat, myLatLng.lng);
    }
  }

  function codeAddress() {
    const geocoder = new google.maps.Geocoder();
    let inputAddress = document.getElementById('address').value;

    geocoder.geocode({ 
      'address': inputAddress,
      'region': 'jp'
    }, function(results, status) {
      if (status == 'OK') {
        map.setCenter(results[0].geometry.location);
        const map_result = results[0].geometry.location;
        map_lat.value = map_result.lat();
        map_lng.value = map_result.lng();
        marker.setPosition(new google.maps.LatLng(map_result.lat(), map_result.lng()));
        marker.setMap(map);
      } else {
        alert('該当する結果がありませんでした');
      }
    });
  }

  // 逆ジオコーディング
  function geocodeLatLng(lat, lng) {
    const geocoder = new google.maps.Geocoder();
    const latlng = { lat: lat, lng: lng };

    geocoder.geocode({ location: latlng })
      .then((response) => {
        if (response.results[0]) {
          let address = response.results[0].formatted_address;
          address = address.replace(/^日本、?|\s?〒\d{3}-\d{4}/g, '').trim();
          document.getElementById("address").value = address;
        }
      })
      .catch((error) => console.error(error));
  }
</script>
